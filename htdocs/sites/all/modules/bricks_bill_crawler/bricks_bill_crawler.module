<?php

/* 
 * Implements hook_menu().
 */
function bricks_bill_crawler_menu() {
//  $items['admin/bill_crawler'] = array(
//    'title' => 'Bricks bill crawler',
//    'page callback' => 'drupal_get_form',
//    'page arguments' => array('bricks_bill_crawler_xml_upload_form'),
//    'access arguments' => array('access content overview'),
//  );
  $items['admin/bill_crawler'] = array(
    'title' => 'Bricks bill crawler',
    'page callback' => 'bricks_bill_crawler_start_crawler_test',
    'access arguments' => array('access content overview'),
  );
  
  
  return $items;
}

/*
 * get one order from website
 */
function bricks_bill_crawler_get_order($login_session, $order_id) {
  $order_url = 'http://www.bricklink.com/orderDetail.asp?ID=' . $order_id;
  curl_setopt($login_session, CURLOPT_URL, $order_url);
  $order_data = curl_exec($login_session);
  
  if (strpos($order_data, 'Object Moved')) {
    return false;
  }
  else {
    return $order_data;
  }
}

/*
 * get one item from website
 */
function bricks_bill_crawler_get_item($login_session, $item_id) {
  $item_url = 'http://www.bricklink.com/catalogItem.asp?S=' . $item_id;
  curl_setopt($login_session, CURLOPT_URL, $item_url);
  $item_data = curl_exec($login_session);
  
  if (strpos($item_data, 'No Item(s) were found. Please try again!')) {
    return false;
  }
  else {
    return $item_data;
  }
}

/*
 * crawl order
 */ 
function bricks_bill_crawler_order_crawl($order) {
  include_once('simple_html_dom.php');
  $buyer = array();
  $start_pos_buyer_block = stripos($order, '<b>Buyer Information</b>');
  $end_pos_buyer_block = stripos($order, '<b>Seller Information</b>');
  $buyer_block = substr($order, $start_pos_buyer_block, ($end_pos_buyer_block-$start_pos_buyer_block));
  preg_match('/HREF="mailto:(.*)">/isU', $buyer_block, $email_match);
  $buyer['email'] = $email_match[1];
  preg_match('/Name & Address:<\/TD><TD WIDTH="75%">(.*)<\/TD>/isU', $buyer_block, $address_match);
  $buyer['address'] = $address_match[1];
  $country_pos = strripos($buyer['address'], '<BR>');  
  $buyer['country'] = substr($buyer['address'], ($country_pos + 4));
  //preg_match('/<td>Grand Total:(.*)/isU', $order, $total_grand);
  
  
  if (!empty($buyer['email']) && !empty($buyer['address']) && !empty($buyer['country'])) {
    return $buyer;
  }
  else {    
    return false;
  }  
}
/*
 * crawl item
 */ 
function bricks_bill_crawler_item_crawl($item) {
  include_once('simple_html_dom.php');
  $label = '';
  $html = str_get_html($item);
  foreach($html->find('table center font[face="Geneva,Arial,Helvetica"] b') as $element) {
       $label = $element;
  }
  if ($label != '') {
    return $label;
  }
  else {    
    return false;
  }  
}

/*
 * start crawler test
 */
function bricks_bill_crawler_start_crawler_test() {
  $login_session = bricks_bill_crawler_login_bricklink();
  $item = bricks_bill_crawler_get_item($login_session, '8455-1');
  $crawl_order = bricks_bill_crawler_item_crawl($item);
} 

/*
 * start crawler
 */
function bricks_bill_crawler_start_crawler() {
  // login
  $login_session = bricks_bill_crawler_login_bricklink();
  
  if ($login_session != false) {
    // load open order nodes
    $order_nodes = bricks_bill_crawler_load_order_nodes();
    foreach ($order_nodes as $order_node) {
      // node load
      $order_node = node_load($order_node->nid);
      // read order page
      $order = bricks_bill_crawler_get_order($login_session, $order_node->title);
      if ($order == false) {
        watchdog('Bricks bill crawler', 'No Order data by NID: %nid', array('%nid' => $order_node->nid), WATCHDOG_ERROR);
        continue;
      }
      // crawl order
      $crawl_order = bricks_bill_crawler_order_crawl($order);
      if ($crawl_order == false) {
        watchdog('Bricks bill crawler', 'Crawler with no result by NID: %nid', array('%nid' => $order_node->nid), WATCHDOG_ERROR);
        continue;
      }
      // crawl item label    
      foreach ($order_node->field_orderitemid[$order_node->language] as $key => $value) {
        if ($order_node->field_orderitemprice[$order_node->language][$key]["value"] > 50 && $order_node->field_orderitemtype[$order_node->language][$key]["value"] == 'S') {
          // read item page
          $item = bricks_bill_crawler_get_item($login_session, $order_node->field_itemid[$order_node->language][$key]["value"]);
          if ($item == false) {
            watchdog('Bricks bill crawler', 'No Item data by NID: %nid', array('%nid' => $order_node->nid), WATCHDOG_ERROR);
            continue;
          }
          // crawl item
          $label = bricks_bill_crawler_item_crawl($item);
          if ($label == false) {
            watchdog('Bricks bill crawler', 'No Item label by NID: %nid', array('%nid' => $order_node->nid), WATCHDOG_ERROR);
            continue;
          }
          $order_node->field_orderitemlabel[$order_node->language][$key]["value"] = $label;
        }
      }
      // save crawler values
      $order_node->field_order_email[$order_node->language][0]['email'] = $crawl_order['email'];
      $order_node->field_order_address[$order_node->language][0]['value'] = $crawl_order['address'];
      $order_node->field_order_country[$order_node->language][0]['value'] = $crawl_order['country'];
      $order_node->field_order_crawled[$order_node->language][0]['value'] = 1;
      node_save($order_node);
      
    }
  }
  else {
    watchdog('Bricks bill crawler', 'Login not available', '', WATCHDOG_ERROR);
  }  
  curl_close($login_session);
}

/**
 * Implements hook_cron().
 */
function bricks_bill_crawler_cron() {
  bricks_bill_crawler_start_crawler();
}

/*
 * login to bricklink
 */
function bricks_bill_crawler_login_bricklink() {
  
  $login_url = 'https://www.bricklink.com/login.asp?logInTo=&logFolder=p&logSub=w'; 
  
  $post_fields = array(
    'logFrmFlag' => 'Y',
		'a' => 'a',
		'frmUsername' => urlencode('44bricks'),
		'frmPassword' => urlencode('16022011DD'),
		'submit' => 'Login to BrickLink'
	);
  
	$post_fields_string = '';
	foreach($post_fields as $key=>$value) { 
		$post_fields_string .= $key.'='.$value.'&'; 
	}

  $curl = curl_init();  
  curl_setopt($curl, CURLOPT_HTTPAUTH, CURLAUTH_BASIC ) ; 
  curl_setopt($curl, CURLOPT_USERPWD, "44bricks:16022011DD"); 
  curl_setopt($curl, CURLOPT_SSLVERSION,3); 
  curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE); 
  curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2); 
  curl_setopt($curl, CURLOPT_HEADER, true); 
  curl_setopt($curl, CURLOPT_POST, true); 
  curl_setopt($curl, CURLOPT_POSTFIELDS, $post_fields_string ); 
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, true); 
  curl_setopt($curl, CURLOPT_USERAGENT, "Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0)"); 
  curl_setopt($curl, CURLOPT_URL, $login_url);
  curl_exec($curl);
  
  // test login
  curl_setopt($curl, CURLOPT_URL, 'http://www.bricklink.com/my.asp');
  $order_data = curl_exec($curl);
  if (strpos($order_data, 'Object Moved')) {
    return false;
  }
  else {
    return $curl;
  }
}

/*
 * load order nodes to crawl
 */
function bricks_bill_crawler_load_order_nodes($limit = 10) {
  $order_nodes = array();
  $query = new EntityFieldQuery;

  $query->entityCondition('entity_type', 'node')
        ->propertyCondition('type', 'orders')
        ->fieldCondition('field_order_crawled', 'value', 0, '=')
        ->range(0, $limit);
    
  foreach ($query->execute() as $entity_type => $entities) {
      foreach ($entities as $entity_id => $entity) {
        $order_nodes[] =  $entity;
      }
  }
    
  return $order_nodes;
}

function br2nl($string) {
  return preg_replace('/\<br(\s*)?\/?\>/i', "\n", $string);
}            